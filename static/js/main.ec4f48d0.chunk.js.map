{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selected","isPressed","this","className","includes","type","onClick","setState","map","good","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAyB,CACvBC,SAAU,MACVC,WAAW,GAHf,4CAME,WAAU,IAAD,OACP,EAAgCC,KAAKH,MAA7BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,uBAAME,UAAU,oBAAhB,UACE,oBAAIA,UAAU,sCAAd,SACGN,EAAMO,SAASJ,GACd,+CACMA,EADN,gBAGE,wBACE,UAAQ,cACRK,KAAK,SACLF,UAAU,cACVG,QAAS,WACP,EAAKC,SAAS,CACZP,SAAU,oBACVC,WAAW,UAKhB,sBAGP,uBAAOE,UAAU,QAAjB,SACE,gCACGN,EAAMW,KAAI,SAAAC,GAAI,OACb,qBAAI,UAAQ,OAAkBN,UAAS,UAAMH,IAAaS,GAAS,gCAAnE,UACE,6BACE,wBACE,UAAST,IAAaS,EACjB,eACA,YACLJ,KAAK,SACLF,UAAWO,IACT,SACA,CAAE,UAAWV,IAAaS,IAE5BH,QAAS,WACHL,GAAaD,IAAaS,EAC5B,EAAKF,SAAS,CACZP,SAAU,oBACVC,WAAW,IAGb,EAAKM,SAAS,CAAEP,SAAUS,EAAMR,WAAW,KAhBjD,SAoBGD,IAAaS,EAAQ,IAAQ,QAIlC,oBAAI,UAAQ,YAAYN,UAAU,eAAlC,SACGM,MA3BmBA,iBAlCtC,GAAyBE,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec4f48d0.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selected: string;\n  isPressed: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selected: 'Jam',\n    isPressed: true,\n  };\n\n  render() {\n    const { selected, isPressed } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {goods.includes(selected) ? (\n            <>\n              {`${selected} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => {\n                  this.setState({\n                    selected: 'No goods selected',\n                    isPressed: false,\n                  });\n                }}\n              />\n            </>\n          ) : ('No goods selected')}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr data-cy=\"Good\" key={good} className={`${(selected === good) && 'has-background-success-light'}`}>\n                <td>\n                  <button\n                    data-cy={selected === good\n                      ? ('RemoveButton')\n                      : ('AddButton')}\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      { 'is-info': selected === good },\n                    )}\n                    onClick={() => {\n                      if (isPressed && selected === good) {\n                        this.setState({\n                          selected: 'No goods selected',\n                          isPressed: false,\n                        });\n                      } else {\n                        this.setState({ selected: good, isPressed: true });\n                      }\n                    }}\n                  >\n                    {selected === good ? ('-') : ('+')}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}